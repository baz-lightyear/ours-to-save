# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
    createStory(title: String!, content: String!, address: String!, author: String, image: String): Story
    createFeature(content: String!, address: String!): Feature
    createUser(email: String!): User
    signup(email: String! password: String! name: String!): User!
    signin( email: String! password: String! ): User!
    signout: SuccessMessage
    requestReset(email: String!): SuccessMessage
    resetPassword( resetToken: String! password: String! confirmPassword: String!): User!
}

type Query {
    stories(where: StoryWhereInput, orderBy: StoryOrderByInput): [Story]!
    story(id: ID!): Story
    features(where: StoryWhereInput, orderBy: FeatureOrderByInput): [Feature]!
    feature(id: ID!): Feature
    latestFeature(where: StoryWhereInput, orderBy: FeatureOrderByInput): Feature
    moreStories(where: StoryWhereInput, orderBy: StoryOrderByInput, cursor: String): [Story]
    feedPreview(orderBy: StoryOrderByInput): [Story]
    categoryFeatures(orderBy: FeatureOrderByInput, category: String): [Feature]
    recentFeatures(orderBy: FeatureOrderByInput): [Feature]
    boostedFeatures(orderBy: FeatureOrderByInput): [Feature]
    me: User
}
